AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Scan invasions files
Resources:
  InvasionBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: ${AWS::StackName}-${AWS::AccountId}-${AWS::Region}
      PublicAccessBlockConfiguration:
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  InvasionBucketBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: InvasionBucket
      PolicyDocument:
        Id: RequireEncryptionInTransit
        Version: '2012-10-17'
        Statement:
        - Principal: '*'
          Action: '*'
          Effect: Deny
          Resource:
          - Fn::GetAtt:
            - InvasionBucket
            - Arn
          - Fn::Sub: ${InvasionBucket.Arn}/*
          Condition:
            Bool:
              aws:SecureTransport: 'false'
  InvasionScan:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.11
      CodeUri: InvasionScan
      Description: Scan invasion screen shots
      MemorySize: 128
      Timeout: 10
      Policies:
      - TextractPolicy: {}
      - S3ReadPolicy:
          BucketName:
            Fn::Sub: ${AWS::StackName}-${AWS::AccountId}-${AWS::Region}
      Events:
        CatBucket:
          Type: S3
          Properties:
            Bucket:
              Ref: InvasionBucket
            Events:
            - s3:ObjectCreated:*
      Layers:
      - Fn::GetAtt:
        - AwsSamAutoDependencyLayerNestedStack
        - Outputs.InvasionScanba3701b7DepLayer
    Metadata:
      SamResourceId: InvasionScan
  AwsSamAutoDependencyLayerNestedStack:
    DeletionPolicy: Delete
    Metadata:
      CreatedBy: AWS SAM CLI sync command
    Properties:
      TemplateURL: /home/chatz/git/newworld/invasions/.aws-sam/auto-dependency-layer/adl_nested_template.yaml
    Type: AWS::CloudFormation::Stack
Outputs:
  Bucket:
    Description: Invasion Bucket
    Value:
      Ref: InvasionBucket
