---
# define sam cloudformation template for a lambda function
AWSTemplateFormatVersion: '2010-09-09'

Transform: AWS::Serverless-2016-10-31

Description: Scan invasions files

Resources:

  InvasionBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-${AWS::AccountId}-${AWS::Region}"
      # AccessControl: Private
      # VersioningConfiguration:
      #   Status: Enabled
      PublicAccessBlockConfiguration:
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  InvasionBucketBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref InvasionBucket
      PolicyDocument:
        Id: RequireEncryptionInTransit
        Version: '2012-10-17'
        Statement:
          - Principal: '*'
            Action: '*'
            Effect: Deny
            Resource:
              - !GetAtt InvasionBucket.Arn
              - !Sub ${InvasionBucket.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: 'false'


  InvasionScan:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.11
      CodeUri: .
      Description: 'Scan invasion screen shots'
      MemorySize: 128
      Timeout: 10
      Policies: 
        - TextractPolicy: {}
        - S3ReadPolicy:
            BucketName: !Sub "${AWS::StackName}-${AWS::AccountId}-${AWS::Region}"
      Events:
        CatBucket:
          Type: S3
          Properties:
            Bucket: !Ref InvasionBucket
            Events:
              - s3:ObjectCreated:*


Outputs:
  Bucket:
    Description: Invasion Bucket
    Value: !Ref InvasionBucket

